import express from 'express';
import bodyParser from "body-parser";
import mongoose from 'mongoose';

//***** ModelViewController *****/

import productsRoutes from './routes/products.js';
//import productsRoutes from './routes/main.js';
import usersRoutes from './routes/users.js';//***** Na ecs√©m. Ha az users-szekhez tartoz√≥ routingokat akarod haszn√°lni, (az usersRoutes-t), akkor azt Itt tal√°lod! üòâ *****/

import cors from 'cors';
import authMiddleware from './middleware/auth.js';

const app = express();
const PORT = 5000;

mongoose.connect('mongodb://localhost:27017/node-express-rest-api', {
    useNewUrlParser: true,
    useUnifiedTopology: true
});
mongoose.connection;

app.use(bodyParser.json());
app.use(cors({
    origin: true,
    methods: ['GET, POST'],
    allowedHeaders: ['Content-Type', 'Token']
}));
//Ez egy fv({}) h√≠v√°s aminek √°t kell adni egy obektumot, √©s ebben az objectben tudjuk megadni azokat a param√©tereket amivel haszn√°lni akarjuk a CORS-t. -> le√≠r√°s a Cors csomag doksij√°ban!!! it az origin b√°rhonnan el√©rhet≈ë, ha korl√°tozni szeretn√©m, felsorolom a domaineket, url-eket !!! A Token be√°ll√≠t√°s√°val √©rem el, hogy a USER mindik egy token nevezet≈± headerben k√ºldje el a tokent

app.use(authMiddleware);

app.use('/products', productsRoutes);
app.use('/users', usersRoutes);
//***** NEM az app.js-be √≠rom be a GET, PUT, ... method-√∫ routingokat, hanem ITT mondom meg melyik √∂sszek√∂t≈ë importot haszn√°lja. üòä *****/
/* app.use(function (req, res, next) {
    res.send('Hello World')
  }) */

app.get('/', (req, res) => {
    res.send('Na sz√≥val. Ha ez ok, akkor Te vagy a CSOD√ÅLATOS!<br>Meger≈ës√≠tem, s≈ët Te vagy a szupercsod√°latos Dragon<br>akit a h√°t√°n hordott a F√∂ld. üòã')
})

app.listen(PORT, () => {
    console.log(`REST API server is running http://localhost:${PORT}`);
});