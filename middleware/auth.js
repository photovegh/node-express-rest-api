//import { url } from "inspector"; //EZ nemtom hogy a pics√°ba ker√ºlt ide!!! ü§î
import { validateToken } from "../models/users.js";

// l√©trehozok egy constanst, ahol megadom azokat az url-eket, ahol nem akarok autentik√°ci√≥t
const noAuthResources = {
    GET: ['/products'],
    POST: ['/users/login'],
    PATCH: [],
    DELETE: [],
    PUT: []
};

// l√©trehozzuk a middleware-t ami h√°rom param√©tert fog megkapni req, res, next n√©vre hallgat√≥ fv()
//next:a middleware-k sorozat√°ban mutatja mi az amit majd meg kell tenni
// az alapbe√°ll√≠t√°s az ellen≈ërz√©sekn√©l az, hogy legyen minden tiltva igy azt mi adjuk meg, mi az amit nyiv√°nosan el√©rhet≈ëv√© akarunk tenni autentik√°ci√≥ n√©lk√ºl
const authMiddleware = (req, res, next) => {
    if (noAuthResources[req.method].find(url => url == req.url)) {
        return next();
    }

    if(req.headers.token){
        validateToken(req.headers.token, (err, user) => {
            if(err) {
                throw err
            }
            if(user) {
                return next()
            } else {
                res.status(401).send('<h1>Authentication error! Sajn√°lom, a TOKEN azonos√≠t√°skor hiba cs√∫szott a sz√°m√≠t√°sba! üò£</h1> by Sususoft')
            }
        })
        return
    }
    
    res.status(401).send('<h1>Authentication error! A kezedre csapok! üò£</h1> by Sususoft')
};
//* A "kezedre csapok" √ºzi-n√©l tot√°l bez√°rtam az alkalmaz√°st, ki igen, de be nem. Nyissuk ki a kapukat, el≈ësz√∂r azoknak akik nem ig√©nyelnek autentik√°ci√≥t, azaz nem kell token. -> els≈ë if() √°g: ha a noAuthResources{} megfelel≈ë kulcs√°n√°l GET:, POST:, ... , ez el√©rhet≈ë sz√°munkra a req.method tulajdons√°g√°ban, pl.: a GET: method t√∂mbj√©ben megtal√°lhat√≥ (find(url)) azaz url amit most kaptunk, akkor menj√ºnk tov√°bb a k√∂vetkez≈ë MIDDLEWARE-re *** retunr next();  *** (fogja azt az url-t amit a user megh√≠vott, √©s megn√©zi, hogy a sz√≥ban forg√≥ met√≥dus t√∂mbj√©ben megtal√°lhat√≥-e)*/
//* Ha viszont olyan url h√≠vtunk meg ami nincs itt felsorolva, akkor elv√°rjuk, hogy a token szerepeoljen a h√≠v√°sban, √©s az helyes legyen. Ahhoz hogy tudjuk, hogy a token helyes vagy nem, a models/users.js file-unkban meg kell val√≥s√≠tani egy token ellen≈ërz≈ë h√≠v√°st. ( validateToken() ) */

export default authMiddleware

//******************************** */
//*********** 51 min ************* */
//******************************** */
